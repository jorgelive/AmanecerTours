<?php
class AppModel extends Model{

	/**
	 * Unbinds validation rules and optionally sets the remaining rules to required.
	 * 
	 * @param string $type 'Remove' = removes $fields from $this->validate
	 *                       'Keep' = removes everything EXCEPT $fields from $this->validate
	 * @param array $fields
	 * @param bool $require Whether to set 'required'=>true on remaining fields after unbind
	 * @return null
	 * @access public
	 */
	function unbindValidation($type, $fields, $require=false)
	{
		if ($type === 'remove'){
			$this->validate = array_diff_key($this->validate, array_flip($fields));
		}elseif ($type === 'keep'){
			$this->validate = array_intersect_key($this->validate, array_flip($fields));
		}
		
		if ($require === true){
			foreach ($this->validate as $field=>$rules){
				if (is_array($rules)){
					$rule = key($rules);
					$this->validate[$field][$rule]['required'] = true;
				}else{
					$ruleName = (ctype_alpha($rules)) ? $rules : 'required';
					$this->validate[$field] = array($ruleName=>array('rule'=>$rules,'required'=>true));
				}
			}
		}
	}
	
	function __googleLangApi($string=NULL,$traducido='en',$original='es'){
		if($string==NULL||$traducido==NULL||$original==NULL){return NULL;}
		$transliterate=array('\u0021'=>'!','\u0022'=>'\'','\u0023'=>'#','\u0024'=>'$','\u0025'=>'%','\u0026'=>'&','\u0027'=>'\'','\u0028'=>'(','\u0029'=>')','\u002a'=>'*','\u002b'=>'+','\u002c'=>',','\u002d'=>'-','\u002e'=>'.','\u002f'=>'/','\u0030'=>'0','\u0031'=>'1','\u0032'=>'2','\u0033'=>'3','\u0034'=>'4','\u0035'=>'5','\u0036'=>'6','\u0037'=>'7','\u0038'=>'8','\u0039'=>'9','\u003a'=>':','\u003b'=>';','\u003c'=>'<','\u003d'=>'=','\u003e'=>'>','\u003f'=>'?','\u0040'=>'@','\u0041'=>'A','\u0042'=>'B','\u0043'=>'C','\u0044'=>'D','\u0045'=>'E','\u0046'=>'F','\u0047'=>'G','\u0048'=>'H','\u0049'=>'I','\u004a'=>'J','\u004b'=>'K','\u004c'=>'L','\u004d'=>'M','\u004e'=>'N','\u004f'=>'O','\u0050'=>'P','\u0051'=>'Q','\u0052'=>'R','\u0053'=>'S','\u0054'=>'T','\u0055'=>'U','\u0056'=>'V','\u0057'=>'W','\u0058'=>'X','\u0059'=>'Y','\u005a'=>'Z','\u005b'=>'[','\u005c'=>'\\','\u005d'=>']','\u005e'=>'^','\u005f'=>'_','\u0060'=>'`','\u0061'=>'a','\u0062'=>'b','\u0063'=>'c','\u0064'=>'d','\u0065'=>'e','\u0066'=>'f','\u0067'=>'g','\u0068'=>'h','\u0069'=>'i','\u006a'=>'j','\u006b'=>'k','\u006c'=>'l','\u006d'=>'m','\u006e'=>'n','\u006f'=>'o','\u0070'=>'p','\u0071'=>'q','\u0072'=>'r','\u0073'=>'s','\u0074'=>'t','\u0075'=>'u','\u0076'=>'v','\u0077'=>'w','\u0078'=>'x','\u0079'=>'y','\u007a'=>'z','\u007b'=>'{','\u007c'=>'|','\u007d'=>'}','\u007e'=>'~','\u00a1'=>'¡','\u00a2'=>'¢','\u00a3'=>'£','\u00a4'=>'¤','\u00a5'=>'¥','\u00a6'=>'¦','\u00a7'=>'§','\u00a8'=>'¨','\u00a9'=>'©','\u00aa'=>'ª','\u00ab'=>'«','\u00ac'=>'¬','\u00ad'=>'­','\u00ae'=>'®','\u00af'=>'¯','\u00b0'=>'°','\u00b1'=>'±','\u00b2'=>'²','\u00b3'=>'³','\u00b4'=>'´','\u00b5'=>'µ','\u00b6'=>'¶','\u00b7'=>'·','\u00b8'=>'¸','\u00b9'=>'¹','\u00ba'=>'º','\u00bb'=>'»','\u00bc'=>'¼','\u00bd'=>'½','\u00be'=>'¾','\u00bf'=>'¿','\u00c0'=>'À','\u00c1'=>'Á','\u00c2'=>'Â','\u00c3'=>'Ã','\u00c4'=>'Ä','\u00c5'=>'Å','\u00c6'=>'Æ','\u00c7'=>'Ç','\u00c8'=>'È','\u00c9'=>'É','\u00ca'=>'Ê','\u00cb'=>'Ë','\u00cc'=>'Ì','\u00cd'=>'Í','\u00ce'=>'Î','\u00cf'=>'Ï','\u00d0'=>'Ð','\u00d1'=>'Ñ','\u00d2'=>'Ò','\u00d3'=>'Ó','\u00d4'=>'Ô','\u00d5'=>'Õ','\u00d6'=>'Ö','\u00d7'=>'×','\u00d8'=>'Ø','\u00d9'=>'Ù','\u00da'=>'Ú','\u00db'=>'Û','\u00dc'=>'Ü','\u00dd'=>'Ý','\u00de'=>'Þ','\u00df'=>'ß','\u00e0'=>'à','\u00e1'=>'á','\u00e2'=>'â','\u00e3'=>'ã','\u00e4'=>'ä','\u00e5'=>'å','\u00e6'=>'æ','\u00e7'=>'ç','\u00e8'=>'è','\u00e9'=>'é','\u00ea'=>'ê','\u00eb'=>'ë','\u00ec'=>'ì','\u00ed'=>'í','\u00ee'=>'î','\u00ef'=>'ï','\u00f0'=>'ð','\u00f1'=>'ñ','\u00f2'=>'ò','\u00f3'=>'ó','\u00f4'=>'ô','\u00f5'=>'õ','\u00f6'=>'ö','\u00f7'=>'÷','\u00f8'=>'ø','\u00f9'=>'ù','\u00fa'=>'ú','\u00fb'=>'û','\u00fc'=>'ü','\u00fd'=>'ý','\u00fe'=>'þ','\u00ff'=>'ÿ','\u0100'=>'Ā','\u0101'=>'ā','\u0102'=>'Ă','\u0103'=>'ă','\u0104'=>'Ą','\u0105'=>'ą','\u0106'=>'Ć','\u0107'=>'ć','\u0108'=>'Ĉ','\u0109'=>'ĉ','\u010a'=>'Ċ','\u010b'=>'ċ','\u010c'=>'Č','\u010d'=>'č','\u010e'=>'Ď','\u010f'=>'ď','\u0110'=>'Đ','\u0111'=>'đ','\u0112'=>'Ē','\u0113'=>'ē','\u0114'=>'Ĕ','\u0115'=>'ĕ','\u0116'=>'Ė','\u0117'=>'ė','\u0118'=>'Ę','\u0119'=>'ę','\u011a'=>'Ě','\u011b'=>'ě','\u011c'=>'Ĝ','\u011d'=>'ĝ','\u011e'=>'Ğ','\u011f'=>'ğ','\u0120'=>'Ġ','\u0121'=>'ġ','\u0122'=>'Ģ','\u0123'=>'ģ','\u0124'=>'Ĥ','\u0125'=>'ĥ','\u0126'=>'Ħ','\u0127'=>'ħ','\u0128'=>'Ĩ','\u0129'=>'ĩ','\u012a'=>'Ī','\u012b'=>'ī','\u012c'=>'Ĭ','\u012d'=>'ĭ','\u012e'=>'Į','\u012f'=>'į','\u0130'=>'İ','\u0131'=>'ı','\u0132'=>'Ĳ','\u0133'=>'ĳ','\u0134'=>'Ĵ','\u0135'=>'ĵ','\u0136'=>'Ķ','\u0137'=>'ķ','\u0138'=>'ĸ','\u0139'=>'Ĺ','\u013a'=>'ĺ','\u013b'=>'Ļ','\u013c'=>'ļ','\u013d'=>'Ľ','\u013e'=>'ľ','\u013f'=>'Ŀ','\u0140'=>'ŀ','\u0141'=>'Ł','\u0142'=>'ł','\u0143'=>'Ń','\u0144'=>'ń','\u0145'=>'Ņ','\u0146'=>'ņ','\u0147'=>'Ň','\u0148'=>'ň','\u0149'=>'ŉ','\u014a'=>'Ŋ','\u014b'=>'ŋ','\u014c'=>'Ō','\u014d'=>'ō','\u014e'=>'Ŏ','\u014f'=>'ŏ','\u0150'=>'Ő','\u0151'=>'ő','\u0152'=>'Œ','\u0153'=>'œ','\u0154'=>'Ŕ','\u0155'=>'ŕ','\u0156'=>'Ŗ','\u0157'=>'ŗ','\u0158'=>'Ř','\u0159'=>'ř','\u015a'=>'Ś','\u015b'=>'ś','\u015c'=>'Ŝ','\u015d'=>'ŝ','\u015e'=>'Ş','\u015f'=>'ş','\u0160'=>'Š','\u0161'=>'š','\u0162'=>'Ţ','\u0163'=>'ţ','\u0164'=>'Ť','\u0165'=>'ť','\u0166'=>'Ŧ','\u0167'=>'ŧ','\u0168'=>'Ũ','\u0169'=>'ũ','\u016a'=>'Ū','\u016b'=>'ū','\u016c'=>'Ŭ','\u016d'=>'ŭ','\u016e'=>'Ů','\u016f'=>'ů','\u0170'=>'Ű','\u0171'=>'ű','\u0172'=>'Ų','\u0173'=>'ų','\u0174'=>'Ŵ','\u0175'=>'ŵ','\u0176'=>'Ŷ','\u0177'=>'ŷ','\u0178'=>'Ÿ','\u0179'=>'Ź','\u017a'=>'ź','\u017b'=>'Ż','\u017c'=>'ż','\u017d'=>'Ž','\u017e'=>'ž','\u017f'=>'ſ','\u01fa'=>'Ǻ','\u01fb'=>'ǻ','\u01fc'=>'Ǽ','\u01fd'=>'ǽ','\u01fe'=>'Ǿ','\u01ff'=>'ǿ','\u02c6'=>'ˆ','\u02c7'=>'ˇ','\u02c9'=>'ˉ','\u02ca'=>'ˊ','\u02cb'=>'ˋ','\u02cd'=>'ˍ','\u02d0'=>'ː','\u02d8'=>'˘','\u02d9'=>'˙','\u02da'=>'˚','\u02db'=>'˛','\u02dc'=>'˜','\u02dd'=>'˝');
		App::import('Core', 'HttpSocket');
		$HttpSocket = new HttpSocket();
		$results = $HttpSocket->post('http://ajax.googleapis.com/ajax/services/language/translate',array('v' => '2.0', 'q' => $string,'langpair' => $original.'|'.$traducido)); 
		
		if(!empty($results)){
			$results = json_decode($results);
			if(isset($results->responseStatus)&&$results->responseStatus==200){
				return stripslashes(strtr($results->responseData->translatedText, $transliterate));
			}else{
				print_r($results);
				return $string;	
			}
		}else{
			return $string;
		}
	}
}
?>